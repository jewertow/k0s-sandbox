# -*- mode: ruby -*-
# vi: set ft=ruby :

PROXY_IP       = "192.168.56.10"
K0S_SYSTEMD_IP = "192.168.56.20"
K0S_OPENRC_IP  = "192.168.56.30"

Vagrant.configure("2") do |config|

  config.vm.define "proxy" do |node|
    node.vm.provider :virtualbox do |vb|
      vb.memory = 1024
      vb.cpus = 1
    end

    node.vm.box = "ubuntu/bionic64"
    node.vm.hostname = "proxy"
    node.vm.network :private_network, ip: PROXY_IP

    node.vm.provision :file, source: "envoy.yaml", destination: "/home/vagrant/envoy.yaml"
    node.vm.provision :shell, inline: <<-SHELL
      mkdir /home/vagrant/envoy
      mv /home/vagrant/envoy.yaml /home/vagrant/envoy
      touch /home/vagrant/envoy/access.log
      chmod 0666 /home/vagrant/envoy/access.log
    SHELL
    node.vm.provision "install_docker", type: "shell", path: "../common/ubuntu-bionic64/install-docker.sh"
    node.vm.provision "run_envoy",      type: "shell", path: "run-envoy.sh"
  end

  config.vm.provider :virtualbox do |vb|
    vb.memory = 2048
    vb.cpus = 2
  end

  config.vm.define "k0s-systemd" do |node|
    node.vm.box = "ubuntu/bionic64"
    node.vm.hostname = "k0s-systemd"
    node.vm.network :private_network, ip: K0S_SYSTEMD_IP
    
    node.vm.provision :file, source: "./k0s", destination: "/home/vagrant/k0s"
    node.vm.provision :shell, env: { "PROXY_IP" => PROXY_IP }, inline: <<-SHELL
      # configure http proxy
      mkdir -p /etc/systemd/system/k0scontroller.service.d
      tee -a /etc/systemd/system/k0scontroller.service.d/k0scontroller.conf <<EOF
[Service]
Environment=CONTAINERD_HTTPS_PROXY=$PROXY_IP:3128
EOF
      # install k0s
      sudo mv /home/vagrant/k0s /usr/local/bin/k0s
      sudo k0s install controller --single
    SHELL
    node.vm.provision :shell, reboot: true
  end

  config.vm.define "k0s-openrc" do |node|
    node.vm.box = "generic/alpine313"
    node.vm.hostname = "k0s-openrc"
    node.vm.network :private_network, ip: K0S_OPENRC_IP

    node.vm.provision "configure-cgroups", type: "shell", path: "../common/openrc/configure-cgroups.sh"
    node.vm.provision :file, source: "./k0s", destination: "/home/vagrant/k0s"
    node.vm.provision :shell, env: { "PROXY_IP" => PROXY_IP }, inline: <<-SHELL
      # configure http proxy
      tee -a /etc/conf.d/k0scontroller <<EOF
export CONTAINERD_HTTPS_PROXY="$PROXY_IP:3128"
EOF
      # install k0s
      mv /home/vagrant/k0s /usr/local/bin/k0s
      k0s install controller --single
    SHELL
    node.vm.provision :shell, reboot: true
  end

end
